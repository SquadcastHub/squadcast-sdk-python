"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class WebformsRemoveWebformRequestTypedDict(TypedDict):
    webform_id: int
    owner_id: NotRequired[str]


class WebformsRemoveWebformRequest(BaseModel):
    webform_id: Annotated[
        int,
        pydantic.Field(alias="webformId"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    owner_id: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=False)),
    ] = None


class WebformsRemoveWebformResponseTypedDict(TypedDict):
    r"""The request has succeeded."""

    data: str


class WebformsRemoveWebformResponse(BaseModel):
    r"""The request has succeeded."""

    data: str
