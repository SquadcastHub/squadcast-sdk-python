"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing_extensions import Annotated, TypedDict


class WebhooksDeleteWebhookRequestTypedDict(TypedDict):
    event_webhook_id: str
    r"""(Required) event webhook ID"""


class WebhooksDeleteWebhookRequest(BaseModel):
    event_webhook_id: Annotated[
        str,
        pydantic.Field(alias="eventWebhookID"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""(Required) event webhook ID"""


class WebhooksDeleteWebhookResponseBodyTypedDict(TypedDict):
    r"""There is no content to send for this request, but the headers may be useful."""


class WebhooksDeleteWebhookResponseBody(BaseModel):
    r"""There is no content to send for this request, but the headers may be useful."""
