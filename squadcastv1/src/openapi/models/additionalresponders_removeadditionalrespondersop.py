"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, PathParamMetadata
import pydantic
from typing_extensions import Annotated, TypedDict


class AdditionalRespondersRemoveAdditionalRespondersRequestTypedDict(TypedDict):
    incident_id: str
    responder_id: str


class AdditionalRespondersRemoveAdditionalRespondersRequest(BaseModel):
    incident_id: Annotated[
        str,
        pydantic.Field(alias="incidentID"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]

    responder_id: Annotated[
        str,
        pydantic.Field(alias="responderID"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]


class AdditionalRespondersRemoveAdditionalRespondersResponseBodyTypedDict(TypedDict):
    r"""There is no content to send for this request, but the headers may be useful."""


class AdditionalRespondersRemoveAdditionalRespondersResponseBody(BaseModel):
    r"""There is no content to send for this request, but the headers may be useful."""
